这是我构建并运用机器学习模型预测个股收益率的代码，你从中可以推断出我的数据结构。现在我想做另一份代码，目标是走势拟合，方法论是：读取并处理predict_data.xlsx中的数据（数据处理办法和“模型预测.py”中一致），取出最新的30天的每支个股的收益率变动，令这五千多条30日的收益率波动去和train_cleaned_stock_data.csv中的数据做比较（train_cleaned_stock_data.csv是个处理后的纯数据表格，思路是直接对每一行都用移动窗口截取很多个30日数据，逐行计算），对每支股票找到与其最近30天走势最接近的任意个股的任意某30天的历史走势。



优化代码：

控制台显示计算动态和进度

采用

filter_col_indices1 = range(87, 89)  # 基本面-前60%
filter_col_indices2 = range(84, 86)  # 风险收益-前60%
# 筛选出同时满足条件的行
filter_conditions1 = [df[col] >= df[col].quantile(0.4) for col in filter_col_indices1]
filter_conditions2 = [df[col] >= df[col].quantile(0.4) for col in filter_col_indices2]
# 合并两个筛选条件
combined_filter_conditions = filter_conditions1 + filter_conditions2
# 应用筛选条件
df = df[np.logical_and.reduce(combined_filter_conditions)]
# 输出筛选后的行数
print(f"筛选后的行数: {df.shape[0]}")

来筛选走势比对的个股数目

为每支筛选后个股的最近30日收益变动找到走势最接近的10段30日收益率数据，并计算这10段30日收益率数据之后5天总收益率的平均值，按照从大到小顺序输出到txt文件中，并单独陈列预测5天收益率前十名。




能否每做一支个股的预测就输出一张30+5日的收益率图，图像的左侧是预测个股和最相似的10段的30日收益率，最右侧则是最接近10段的后5日收益率。相似10段的走势曲线用透明度80%（很透明）的不同颜色，被预测个股用不透明的红色。左侧30日和最右侧5日间用一条虚线竖杠区分开。最右侧5日加入不透明红色虚线预测5天的走势，计算方法是找到同时对10段的右侧5日数据最接近的一条曲线。